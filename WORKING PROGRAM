#!/usr/bin/env python3
import cv2
import numpy as np
import pyzed.sl as sl

# --- ZED setup ---
zed = sl.Camera()
init_params = sl.InitParameters()
init_params.camera_resolution = sl.RESOLUTION.AUTO
init_params.camera_fps = 15
init_params.depth_mode = sl.DEPTH_MODE.NONE  # disable depth, just video

if zed.open(init_params) != sl.ERROR_CODE.SUCCESS:
    print("Camera open failed. Exit.")
    exit()

runtime = sl.RuntimeParameters()
img_left = sl.Mat()
img_right = sl.Mat()

while True:
    if zed.grab(runtime) == sl.ERROR_CODE.SUCCESS:
        # Retrieve both stereo images
        zed.retrieve_image(img_left, sl.VIEW.LEFT)
        zed.retrieve_image(img_right, sl.VIEW.RIGHT)

        frame_left_bgr  = cv2.cvtColor(img_left.get_data(),  cv2.COLOR_BGRA2BGR)
        frame_right_bgr = cv2.cvtColor(img_right.get_data(), cv2.COLOR_BGRA2BGR)

        # --- Harris corner detection function ---
        def detect_corners(frame_bgr, win="Corners"):
            gray = cv2.cvtColor(frame_bgr, cv2.COLOR_BGR2GRAY)
            gray = cv2.GaussianBlur(gray, (11, 11), 2)
            dst = cv2.cornerHarris(np.float32(gray), blockSize=2, ksize=3, k=0.04)
            dst = cv2.dilate(dst, None)
            vis = frame_bgr.copy()
            thresh = 0.01 * dst.max()
            vis[dst > thresh] = [0, 0, 255]
            cv2.imshow(win, vis)

        # Run on both cameras
        detect_corners(frame_left_bgr,  "Left Camera Corners")
        detect_corners(frame_right_bgr, "Right Camera Corners")

        # Press q to quit
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

# Cleanup
cv2.destroyAllWindows()
zed.close()
